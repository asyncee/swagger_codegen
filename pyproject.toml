[tool.poetry]
name = "swagger-codegen"
version = "0.1.30"
description = "Generate API clients by parsing Swagger definitions"
authors = ["asyncee"]
license = "MIT"
readme = "readme.md"
homepage = "https://github.com/asyncee/swagger_codegen"
repository = "https://github.com/asyncee/swagger_codegen"
documentation = "https://github.com/asyncee/swagger_codegen"
keywords = ["swagger-codegen", "openapi", "swagger", "pydantic"]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^1.4"
multidict = "^5"
jinja2 = "^2.11.1"
click = "^7.1.1"
typer = "^0.3"
toml = "^0.10.0"
inflection = "^0.5"
schemathesis = "3.3.1"
boltons = "^20.2.1"
rich = "^9.6.1"
httpx = { version = "*", optional = true }
aiohttp = { version = "*", optional = true }
requests = { version = "*", optional = true }

[tool.poetry.dev-dependencies]
requests-toolbelt = "^0.9.1"
pytest-aiohttp = "^0.3.0"
pytest-lazy-fixture = "^0.6.3"
mypy = "^0"
mypy-extensions = "^0"
fastapi = "^0.63.0"
uvicorn = "^0.13.2"
black = "^20.8b1"
isort = "^5.7.0"
flake8 = "^3.8.4"
pytest-cov = "^2.10.1"

[tool.poetry.extras]
sync = ["requests"]
async = ["aiohttp", "httpx"]
all = ["aiohttp", "requests", "httpx"]

[tool.poetry.scripts]
swagger_codegen = 'swagger_codegen.cli.main:app'

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["src"]
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
known_first_party = ["swagger_codegen"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.black]
line-length = 100
target-version = ['py38']
